<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notes on Jonathan`s Blog</title>
    <link>https://GodLovesJonny.github.io/tags/notes/</link>
    <description>Recent content in notes on Jonathan`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2020</copyright>
    <lastBuildDate>Wed, 22 Apr 2020 14:31:05 +0800</lastBuildDate>
    
	<atom:link href="https://GodLovesJonny.github.io/tags/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>软件工程复习笔记</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes/</link>
      <pubDate>Wed, 22 Apr 2020 14:31:05 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes/</guid>
      <description>Software Process Software process models: The waterfall model, Incremental development, Reuse-oriented software engineering. Waterfall model phases: Requirements analysis and definition, System and software design, Implementation and unit testing, Integration and system testing, Operation and maintenance. The main drawback of the waterfall model: the difficulty of accommodating change after the process is underway. (In principle, a phase has to be complete before moving onto the next phase.) The waterfall model is</description>
    </item>
    
    <item>
      <title>Numpy散记 -- allclose函数的使用</title>
      <link>https://GodLovesJonny.github.io/2020/numpy-allclose/</link>
      <pubDate>Tue, 21 Apr 2020 13:09:31 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/numpy-allclose/</guid>
      <description>函数原型 numpy.allclose(a, b, rtol=1e-05, atol=1e-08, equal_nan=False) 参数 a, b：用于比较的两个输入数组 rtol：float型，相对容忍系数（relative tolerance parameter） atol：fl</description>
    </item>
    
    <item>
      <title>Numpy散记 -- clip函数的使用</title>
      <link>https://GodLovesJonny.github.io/2020/numpy-clip/</link>
      <pubDate>Tue, 21 Apr 2020 12:54:52 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/numpy-clip/</guid>
      <description>函数原型 numpy.clip(a, a_min, a_max, out=None, **kwargs) 参数 a：数组 a_max：数组元素最大值 a_min：数组元素最小值 功能 np.clip()函数用于将数组元素的值保持在给定区间</description>
    </item>
    
    <item>
      <title>考研数学复习杂笔记 -- 多元函数微分学</title>
      <link>https://GodLovesJonny.github.io/2020/math-dw/</link>
      <pubDate>Mon, 20 Apr 2020 16:19:26 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/math-dw/</guid>
      <description>多元函数可导推不出连续与可微：多元的可导是指一阶偏导数存在，而偏导数是用一元函数极限定义的，只与点\((x_{0}, y_{0})\)邻域内过</description>
    </item>
    
    <item>
      <title>考研数学复习杂笔记 -- 向量代数与空间解析几何</title>
      <link>https://GodLovesJonny.github.io/2020/math-vk/</link>
      <pubDate>Mon, 20 Apr 2020 15:53:16 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/math-vk/</guid>
      <description>混合积为零等价于三向量共面 求\(\vec{a}\)和\(\vec{b}\)的对角线向量可以求\(\vec{a}^{o}+\vec{b}^{o</description>
    </item>
    
    <item>
      <title>BLWL[27] Shell 杂记</title>
      <link>https://GodLovesJonny.github.io/2020/blwl27/</link>
      <pubDate>Mon, 13 Apr 2020 10:06:16 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/blwl27/</guid>
      <description>cd - 回到前一个工作路径 若在输入命令时中途改变了主意，可以按下Alt-#在行首添加#以注释该命令并回车执行（相当于依次按下Ctrl-A, #, En</description>
    </item>
    
    <item>
      <title>BLWL[26] Axel Command Tips</title>
      <link>https://GodLovesJonny.github.io/2020/blwl26/</link>
      <pubDate>Thu, 12 Mar 2020 11:00:10 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/blwl26/</guid>
      <description>axel是Linux下一个不错的HTTP/ftp高速下载工具。 axel支持多线程下载、断点续传，且可以从多个地址或者从一个地址的多个连接来下</description>
    </item>
    
    <item>
      <title>炼丹杂笔记 -- 饱和激活函数</title>
      <link>https://GodLovesJonny.github.io/2020/dl-notes1/</link>
      <pubDate>Wed, 04 Mar 2020 09:07:11 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/dl-notes1/</guid>
      <description>饱和激活函数 当自变量趋于正无穷时，若激活函数的导数趋于0,则称之为右饱和。 当自变量趋于负无穷时，若激活函数的导数趋于0,则称之为左饱和。 若一</description>
    </item>
    
  </channel>
</rss>