<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notes on Jonathan`s Blog</title>
    <link>https://GodLovesJonny.github.io/tags/notes/</link>
    <description>Recent content in notes on Jonathan`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved - 2020</copyright>
    <lastBuildDate>Sun, 26 Apr 2020 16:43:44 +0800</lastBuildDate>
    
	<atom:link href="https://GodLovesJonny.github.io/tags/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>软件工程复习笔记[12] - Configuration Management</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes12/</link>
      <pubDate>Sun, 26 Apr 2020 16:43:44 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes12/</guid>
      <description>Because software changes frequently, systems, can be thought of as a set of versions, each of which has to be maintained and managed. Configuration management (CM) is concerned with the policies, processes and tools for managing changing software systems. CM Activities Change management Keeping track of requests for changes to the software from customers and developers, working out the costs and impact of changes, and deciding the changes should be</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[11] - Quality Management</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes11/</link>
      <pubDate>Sun, 26 Apr 2020 16:19:25 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes11/</guid>
      <description>Concerned with ensuring that the required level of quality is achieved in a software product. Three principal concerns: At the organizational level, quality management is concerned with establishing a framework of organizational processes and standards that will lead to high-quality software. At the project level, quality management involves the application of specific quality processes and checking that these planned processes have been followed. At the project level, quality management is</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[10] - Project Planning</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes10/</link>
      <pubDate>Sun, 26 Apr 2020 13:08:51 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes10/</guid>
      <description>Project planning involves breaking down the work into parts and assign these to project team members, anticipate problems that might arise and prepare tentative solutions to those problems. The aim of planning at this stage is to provide information that will be used in setting a price for the system to customers. Plan sections Introduction Project organization Risk analysis Hardware and software resource requirements Work breakdown Project schedule Monitoring and</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[9] - Project Management</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes9/</link>
      <pubDate>Sun, 26 Apr 2020 11:30:59 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes9/</guid>
      <description>Concerned with activities involved in ensuring that software is delivered on time and on schedule and in accordance with the requirements of the organisations developing and procuring the software. Success Criteria Deliver the software to the customer at the agreed time. Keep overall costs within budget. Deliver software that meets the customer’s expectations. Maintain a happy and well-functioning development team. Management</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[8] - Software Evolution</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes8/</link>
      <pubDate>Fri, 24 Apr 2020 19:30:54 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes8/</guid>
      <description>A key problem for all organizations is implementing and managing change to their existing software systems. The software evolution process Change implementation Program Evolution Dynamics Program evolution dynamics is the study of the processes of system change. After several major empirical studies, Lehman and Belady proposed that there were a number of ‘laws’ which applied to all systems as they evolved. There are sensible observations</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[7] - Software Testing</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes7/</link>
      <pubDate>Fri, 24 Apr 2020 13:43:03 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes7/</guid>
      <description>Program Testing Goals To demonstrate to the developer and the customer that the software meets its requirements. (leads to validation testing) To discover situations in which the behavior of the software is incorrect, undesirable or does not conform to its specification. (leads to defect testing) Testing can only show the presence of errors in a program. It cannot demonstrate that there are no remaining faults. Verification vs Validation Verification &amp;ldquo;Are</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[6] - Design And Implementation</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes6/</link>
      <pubDate>Thu, 23 Apr 2020 19:09:46 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes6/</guid>
      <description>Software design and implementation activities are invariably inter-leaved. An Object-oriented Design Process Object-oriented design processes involve developing a number of different system models. They require a lot of effort for development and maintenance of these models and, for small systems, this may not be cost-effective. However, for large systems developed by different groups design models are an important communication mechanism. Common activities Define the context and modes of use of</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[5] - Architectural Design</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes5/</link>
      <pubDate>Thu, 23 Apr 2020 13:47:30 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes5/</guid>
      <description>The design process for identifying the sub-systems making up a system and the framework for sub-system control and communication is architectural design, which is an early stage of the system design process. The output of this design process is a description of the software architecture. It represents the link between specification and design processes and is often carried out in parallel with some specification activities. Each architectural model only shows</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[4] - System Modeling</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes4/</link>
      <pubDate>Thu, 23 Apr 2020 09:53:53 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes4/</guid>
      <description>System modeling is the process of developing abstract models of a system, with each model presenting a different view or perspective of that system. System modeling helps the analyst to understand the functionality of the system and models are used to communicate with customers. Unified Modeling Language (UML) The UML is the standard language for visualizing, specifying, constructing, and documenting the artifacts of a software-intensive system. It can be used</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[3] - Requirements Engineering</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes3/</link>
      <pubDate>Wed, 22 Apr 2020 17:24:10 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes3/</guid>
      <description>Types Of Requirement User requirements: Statements in natural language plus diagrams of the services the system provides and its operational constraints. Written for customers. System requirements: A structured document setting out detailed descriptions of the system’s functions, services and operational constraints. Defines what should be implemented so may be part of a contract between client and contractor. Functional And Non-functional Requirements Functional requirements</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[2] - Agile Software Development</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes2/</link>
      <pubDate>Wed, 22 Apr 2020 17:18:47 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes2/</guid>
      <description>Agile Methods Features Focus on the code rather than the design. Are based on an iterative approach to software development. Are intended to deliver working software quickly and evolve this quickly to meet changing requirements. The aim of agile methods is to reduce overheads in the software process (e.g. by limiting documentation) and to be able to respond quickly to changing requirements without excessive rework. The principles of agile methods</description>
    </item>
    
    <item>
      <title>软件工程复习笔记[1] - Software Process</title>
      <link>https://GodLovesJonny.github.io/2020/se-notes1/</link>
      <pubDate>Wed, 22 Apr 2020 14:31:05 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/se-notes1/</guid>
      <description>Software Process Software processes are the activities involved in producing a software system. General Software process models: The waterfall model, Incremental development, Reuse-oriented software engineering. Waterfall model phases: Requirements analysis and definition, System and software design, Implementation and unit testing, Integration and system testing, Operation and maintenance. The main drawback of the waterfall model: the difficulty of accommodating change after the process is underway. (In principle, a phase has to</description>
    </item>
    
    <item>
      <title>Numpy散记 -- allclose函数的使用</title>
      <link>https://GodLovesJonny.github.io/2020/numpy-allclose/</link>
      <pubDate>Tue, 21 Apr 2020 13:09:31 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/numpy-allclose/</guid>
      <description>函数原型 numpy.allclose(a, b, rtol=1e-05, atol=1e-08, equal_nan=False) 参数 a, b：用于比较的两个输入数组 rtol：float型，相对容忍系数（relative tolerance parameter） atol：fl</description>
    </item>
    
    <item>
      <title>Numpy散记 -- clip函数的使用</title>
      <link>https://GodLovesJonny.github.io/2020/numpy-clip/</link>
      <pubDate>Tue, 21 Apr 2020 12:54:52 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/numpy-clip/</guid>
      <description>函数原型 numpy.clip(a, a_min, a_max, out=None, **kwargs) 参数 a：数组 a_max：数组元素最大值 a_min：数组元素最小值 功能 np.clip()函数用于将数组元素的值保持在给定区间</description>
    </item>
    
    <item>
      <title>考研数学复习杂笔记 -- 多元函数微分学</title>
      <link>https://GodLovesJonny.github.io/2020/math-dw/</link>
      <pubDate>Mon, 20 Apr 2020 16:19:26 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/math-dw/</guid>
      <description>多元函数可导推不出连续与可微：多元的可导是指一阶偏导数存在，而偏导数是用一元函数极限定义的，只与点\((x_{0}, y_{0})\)邻域内过</description>
    </item>
    
    <item>
      <title>考研数学复习杂笔记 -- 向量代数与空间解析几何</title>
      <link>https://GodLovesJonny.github.io/2020/math-vk/</link>
      <pubDate>Mon, 20 Apr 2020 15:53:16 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/math-vk/</guid>
      <description>混合积为零等价于三向量共面 求\(\vec{a}\)和\(\vec{b}\)的对角线向量可以求\(\vec{a}^{o}+\vec{b}^{o</description>
    </item>
    
    <item>
      <title>BLWL[27] Shell 杂记</title>
      <link>https://GodLovesJonny.github.io/2020/blwl27/</link>
      <pubDate>Mon, 13 Apr 2020 10:06:16 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/blwl27/</guid>
      <description>cd - 回到前一个工作路径 若在输入命令时中途改变了主意，可以按下Alt-#在行首添加#以注释该命令并回车执行（相当于依次按下Ctrl-A, #, En</description>
    </item>
    
    <item>
      <title>BLWL[26] Axel Command Tips</title>
      <link>https://GodLovesJonny.github.io/2020/blwl26/</link>
      <pubDate>Thu, 12 Mar 2020 11:00:10 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/blwl26/</guid>
      <description>axel是Linux下一个不错的HTTP/ftp高速下载工具。 axel支持多线程下载、断点续传，且可以从多个地址或者从一个地址的多个连接来下</description>
    </item>
    
    <item>
      <title>炼丹杂笔记 -- 饱和激活函数</title>
      <link>https://GodLovesJonny.github.io/2020/dl-notes1/</link>
      <pubDate>Wed, 04 Mar 2020 09:07:11 +0800</pubDate>
      
      <guid>https://GodLovesJonny.github.io/2020/dl-notes1/</guid>
      <description>饱和激活函数 当自变量趋于正无穷时，若激活函数的导数趋于0,则称之为右饱和。 当自变量趋于负无穷时，若激活函数的导数趋于0,则称之为左饱和。 若一</description>
    </item>
    
  </channel>
</rss>